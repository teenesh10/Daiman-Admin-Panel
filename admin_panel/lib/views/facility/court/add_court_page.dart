import 'package:flutter/material.dart';
import 'package:admin_panel/models/court.dart';

class AddCourtPage extends StatefulWidget {
  const AddCourtPage({super.key});

  @override
  _AddCourtPageState createState() => _AddCourtPageState();
}

class _AddCourtPageState extends State<AddCourtPage> {
  final _formKey = GlobalKey<FormState>();

  String _courtName = '';
  String _description = '';
  bool _availability = true;

  void _submitForm() {
    if (_formKey.currentState!.validate()) {
      _formKey.currentState!.save();
      final newCourt = Court(
        courtID: '', // ID will be generated by Firestore
        courtName: _courtName,
        description: _description,
        availability: _availability,
      );

      Navigator.pop(context, newCourt);
    }
  }

  @override
  Widget build(BuildContext context) {
    final Size _size = MediaQuery.of(context).size;

    return Scaffold(
      appBar: AppBar(
        title: const Text('Add New Court'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              TextFormField(
                decoration: const InputDecoration(
                  labelText: 'Court Name',
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a court name';
                  }
                  return null;
                },
                onSaved: (value) {
                  _courtName = value!;
                },
              ),
              const SizedBox(height: 20.0),
              TextFormField(
                decoration: const InputDecoration(
                  labelText: 'Description',
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a description';
                  }
                  return null;
                },
                onSaved: (value) {
                  _description = value!;
                },
              ),
              const SizedBox(height: 20.0),
              SwitchListTile(
                title: const Text('Available'),
                value: _availability,
                onChanged: (value) {
                  setState(() {
                    _availability = value;
                  });
                },
              ),
              const SizedBox(height: 20.0),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  ElevatedButton(
                    onPressed: () {
                      Navigator.pop(context);
                    },
                    child: const Text('Cancel'),
                    style: TextButton.styleFrom(
                      padding: EdgeInsets.symmetric(
                        horizontal: 20.0,
                        vertical: _size.width < 600 ? 10.0 : 15.0,
                      ),
                      backgroundColor: Colors.red,
                    ),
                  ),
                  ElevatedButton(
                    onPressed: _submitForm,
                    child: const Text('Submit'),
                    style: TextButton.styleFrom(
                      padding: EdgeInsets.symmetric(
                        horizontal: 20.0,
                        vertical: _size.width < 600 ? 10.0 : 15.0,
                      ),
                      backgroundColor: Colors.green,
                    ),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}
